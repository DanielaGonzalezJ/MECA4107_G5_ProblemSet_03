if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
GADMTools,
stringr,
stargazer,
ranger,
tidymodels
)
available_tags("leisure")
print(n=33)
tags <- available_tags("leisure")
tags
View(tags)
tags <- available_tags("Einkauf")
features <- available_features()
view(features)
cc <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "shop" , value = "mall")
cc_sf <- osmdata_sf(cc)
cc_sf <- osmdata_sf(cc)
# De las features del parque nos interesa su geomoetría y donde estan ubicados
cc_geometria <- cc_sf$osm_polygons %>%
dplyr::select(osm_id, name)
# Guardemos los poligonos de los parques
cc_geometria <- st_as_sf(cc_sf$osm_polygons)
cc_centroides <- st_centroid(cc_geometria, byid = T)
cc_centroides <- cc_centroides %>%
mutate(x=st_coordinates(cc_centroides)[, "X"]) %>%
mutate(y=st_coordinates(cc_centroides)[, "Y"])
cc_centroides <- st_centroid(cc_geometria, byid = T)
cc_centroides <- cc_centroides %>%
mutate(x=st_coordinates(cc_centroides)[, "X"]) %>%
mutate(y=st_coordinates(cc_centroides)[, "Y"])
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red",weight = 10,
opacity = 0.8, popup = cc_geometria$name) %>%
addCircles(lng = centroides$x,
lat = centroides$y,
col = "darkblue", opacity = 0.5,radius =1)
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red",weight = 10,
opacity = 0.8, popup = cc_geometria$name) %>%
addCircles(lng = cc_centroides$x,
lat = cc_centroides$y,
col = "darkblue", opacity = 0.5,radius =1)
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
GADMTools,
stringr,
stargazer,
ranger,
tidymodels
)
setwd("C:/Users/USER/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
GADMTools,
stringr,
stargazer,
ranger,
tidymodels
)
setwd("C:/Users/USER/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
setwd("C:/madag/USER/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
setwd("C:/Users/madag/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
tags <- available_tags()
tags <- available_tags("shop")
features <- available_features()
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
GADMTools,
stringr,
stargazer,
ranger,
tidymodels
)
setwd("C:/Users/madag/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
tags <- available_tags("shop")
features <- available_features()
# Extraemos la info de todos los CCs
cc <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "shop" , value = "mall")
# Cambiamos el formato para que sea un objeto sf (simple features)
cc_sf <- osmdata_sf(cc)
# De las features del parque nos interesa su geomoetría y donde estan ubicados
cc_geometria <- cc_sf$osm_polygons %>%
dplyr::select(osm_id, name)
# Guardemos los poligonos de los parques
cc_geometria <- st_as_sf(cc_sf$osm_polygons)
# Calculamos el centroide de cada parque para aproximar su ubciacion como un solo punto
cc_centroides <- st_centroid(cc_geometria, byid = T)
cc_centroides <- cc_centroides %>%
mutate(x=st_coordinates(cc_centroides)[, "X"]) %>%
mutate(y=st_coordinates(cc_centroides)[, "Y"])
#Visualización de los CC
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red",weight = 10,
opacity = 0.8, popup = cc_geometria$name) %>%
addCircles(lng = cc_centroides$x,
lat = cc_centroides$y,
col = "darkblue", opacity = 0.5,radius =1)
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
rio,
plotly,
GADMTools,
stringr,
stargazer,
ranger,
tidymodels
)
setwd("C:/Users/madag/OneDrive - Universidad de los andes/Semestre VIII/Big Data")
tags <- available_tags("shop")
features <- available_features()
# Extraemos la info de todos los CCs
cc <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "shop" , value = "mall")
# Cambiamos el formato para que sea un objeto sf (simple features)
cc_sf <- osmdata_sf(cc)
# De las features del parque nos interesa su geomoetría y donde estan ubicados
cc_geometria <- cc_sf$osm_polygons %>%
dplyr::select(osm_id, name)
# Guardemos los poligonos de los parques
cc_geometria <- st_as_sf(cc_sf$osm_polygons)
# Calculamos el centroide de cada parque para aproximar su ubciacion como un solo punto
cc_centroides <- st_centroid(cc_geometria, byid = T)
cc_centroides <- cc_centroides %>%
mutate(x=st_coordinates(cc_centroides)[, "X"]) %>%
mutate(y=st_coordinates(cc_centroides)[, "Y"])
#Visualización de los CC
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red",weight = 10,
opacity = 0.8, popup = cc_geometria$name) %>%
addCircles(lng = cc_centroides$x,
lat = cc_centroides$y,
col = "darkblue", opacity = 0.5,radius =1)
cc_geometria$name
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red", weight = 10,
opacity = 0.8, popup = ~name) %>%
addCircles(lng = ~x,
lat = ~y,
col = "darkblue", opacity = 0.5, radius = 1, data = cc_centroides)
leaflet() %>%
addTiles() %>%
addPolygons(data = cc_geometria, col = "red",weight = 10,
opacity = 0.8) %>%
addCircles(lng = cc_centroides$x,
lat = cc_centroides$y,
col = "darkblue", opacity = 0.5,radius =1)
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load( tidyverse, # tidy-data
glmnet, # To implement regularization algorithms.
caret, # creating predictive models
skimr,
knitr,
kableExtra,
leaflet, # Mapas interactivos
visdat, #Visualizaci´pon de missings
osmdata,
tmaptools,
sf,
GADMTools,
stringr
)
#Seleccionamos el directorio y Cargamos las bases de datos
#setwd("C:/Users/USER/OneDrive - Universidad de los andes/Semestre VIII/Big Data/MECA4107_G5_ProblemSet_03")
setwd("C:/Users/madag/OneDrive - Universidad de los andes/Semestre VIII/Big Data/MECA4107_G5_ProblemSet_03")
#Cargamos las bases de Datos
mzbarrio <- st_read("Data/manzanaestratificacion/ManzanaEstratificacion.shp")
test<-read.csv("Data/test.csv")
train<-read.csv("Data/train.csv")
leaflet() %>%
addTiles() %>%  #capa base
addPolygons(data = mzbarrio$geometry, fillColor = "red",color="black", weight = 1)
leaflet() %>%
addTiles() %>%  #capa base
addCircles(data=coordinates$geometry, fillColor = "blue",color = "blue",weight = 1)
train$longitud <- train$lon
train$latitud <- train$lat
test$longitud <- test$lon
test$latitud <- test$lat
coordinates_tr <- st_as_sf(train, coords = c("lon", "lat"), crs = st_crs(mzbarrio))
coordinates_te <- st_as_sf(test, coords = c("lon", "lat"), crs = st_crs(mzbarrio))
leaflet() %>%
addTiles() %>%  #capa base
addCircles(data=coordinates$geometry, fillColor = "blue",color = "blue",weight = 1)
leaflet() %>%
addTiles() %>%  #capa base
addCircles(data=coordinates_tr$geometry, fillColor = "blue",color = "blue",weight = 1)
mzbarrio$geometry
leaflet() %>%
addTiles() %>%  #capa base
addCircles(data=coordinates_tr$geometry, fillColor = "blue",color = "blue",weight = 1)
